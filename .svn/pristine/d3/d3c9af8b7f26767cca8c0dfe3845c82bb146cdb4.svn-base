
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<ul class="pagination justify-content-center">
    <li class="page-item @prevDisabled">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="page-link">
            &laquo
        </a>
    </li>
    @if (Model.TotalPages > 1)
    {
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            @if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(i)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link">
                        @(i)
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(i)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link">
                        @(i)
                    </a>
                </li>
            }
        }
    }
    <li class="page-item @nextDisabled">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="page-link">
            &raquo
        </a>
    </li>
</ul>

